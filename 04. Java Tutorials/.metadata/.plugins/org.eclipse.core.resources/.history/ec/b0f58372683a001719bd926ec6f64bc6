
public class Stack<E> {
	private SinglyLinkedList<E> list = new SinglyLinkedList<>();
	public Stack() {}
	public int size() {
		return list.size();
	}
	public boolean isEmpty() {
		return list.isEmpty();
	}
	public void push(E element) {
		list.addFirst(element);
	}
	public E pop() {
		return list.removeFirst();
	}
	public E top() {
		return list.first();
	}
	
	public String reverse(String myStr) {
		System.out.println("Initial String = " + myStr);
		String newStr = "";
		Stack<String> myStack = new Stack<>();
		for(int i = 0; i < myStr.length(); i++) {
			myStack.push(myStr.substring(i, i));
		}
		while(!myStack.isEmpty()) {
			newStr += myStack.pop();
		}
		System.out.println("Final String = " + newStr);
		return newStr;
	}
}
